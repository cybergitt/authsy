{
  "compilerOptions": {
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "declarationMap": true, // This will allow code navigation between projects.
    "target": "ESNext",
    "module": "NodeNext",
    "moduleResolution": "NodeNext", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "lib": ["ES2021"], /* Specify a list of built-in API declaration groups that can be chose to include in project. */
    /* Do not emit comments to output. */
    "allowJs": true, /* Allow javascript files to be compiled. */
    "checkJs": false, /* Report errors in .js files. */
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
    "noEmit": true, /* Do not emit outputs. */
    /* Concatenate and emit output to single file. */
    "outDir": "./dist", /* Redirect output structure to the directory. */
    "rootDir": ".", /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "paths": {
      "@common/*": ["./src/common/*"],
      "@features/*": ["./src/features/*"],
      "@infrastructure/*": ["./src/infrastructure/*"],
    },
    "resolveJsonModule": true,
    "typeRoots": ["./node_modules/@types"],
    "noImplicitReturns": true, /* Will check all code paths in a function to ensure they return a value. */
    "noImplicitAny": true, /* Will fall back to a type of any for a variable when it cannot infer the type. */
    "strictNullChecks": false,
    "skipLibCheck": true, /* Skip type checking of declaration files. */
    "sourceMap": true,
    "strict": true /* Enable all strict type-checking options. */
  },
  "extends": [],
  "include": ["src"],
  //"exclude": ["node_modules", "dist"],
  "ts-node": {
    "swc": true,
    "esm": true,
    "experimentalSpecifierResolution": "node"
  },
  "compileOnSave": true,
}
